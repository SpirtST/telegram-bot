# -*- coding: utf-8 -*-
import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)

# =====================
# –ù–ê–°–¢–†–û–ô–ö–ò –ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
# =====================
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMINS_STR = os.getenv("ADMINS", "")  # –í—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç "" - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ Environment Variables –Ω–∞ Render")

if not ADMINS_STR:
    raise ValueError("‚ùå ADMINS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã! –î–æ–±–∞–≤—å—Ç–µ ID –∞–¥–º–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ Render")

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ADMINS –≤ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª
try:
    ADMINS = [int(admin_id.strip()) for admin_id in ADMINS_STR.split(",") if admin_id.strip()]
except ValueError:
    raise ValueError("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ADMINS! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123,456)")

# =====================
# –û–°–ù–û–í–ù–û–ô –ö–û–î –ë–û–¢–ê
# =====================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.id not in ADMINS:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        return

    buttons = [
        [KeyboardButton("üîç –ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ")],
        [KeyboardButton("ü™û –ó–µ—Ä–∫–∞–ª–∫–∏"), KeyboardButton("üî¢ –¢—Ä–æ–π–Ω—ã–µ")],
    ]
    await update.message.reply_text(
        "üöó –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üîç –ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1000-5000):")
    elif text in ["ü™û –ó–µ—Ä–∫–∞–ª–∫–∏", "üî¢ –¢—Ä–æ–π–Ω—ã–µ"]:
        await update.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {text}")

# =====================
# –ó–ê–ü–£–°–ö –ë–û–¢–ê
# =====================
def main():
    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"üëë –ê–¥–º–∏–Ω—ã: {ADMINS}")

    app = Application.builder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("üîé –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
    app.run_polling()

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise
